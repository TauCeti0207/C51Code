C51 COMPILER V9.60.0.0   TEST                                                              06/25/2022 16:26:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\Keil5\C51\BIN\C51.EXE test.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /****************************Œƒº˛∞¸∫¨*************************************/
   2          #include < reg52.h >
   3          #include < character.h >
   4          #include < lcd.h >
   5          #include < clock.h >
   6          #include < sensor.h>
   7          #include < calendar.h >
   8          #include < key.h >
   9          
  10          /*****************************‘§∂®“Â**************************************/
  11          #define uchar unsigned char
  12          #define uint unsigned int
  13          /****************************************************************************/
  14          sbit bell = P2 ^ 0; //∂®“Â∑‰√˘∆˜∂Àø⁄
  15          /*****************************************************************************
  16           * √˚≥∆: Timer0_Service() inturrupt 1
  17           * π¶ƒ‹: ÷–∂œ∑˛ŒÒ≥Ã–Ú ’˚µ„±® ± 3…˘‡Ω‡Ωµƒ…˘“Ù
  18           * »Îø⁄≤Œ ˝:
  19           * ≥ˆø⁄≤Œ ˝:
  20           *****************************************************************************/
  21          void Timer0_Service() interrupt 1
  22          {
  23   1              static uchar count = 0;
  24   1              static uchar flag = 0; //º«¬º√˘Ω–µƒ¥Œ ˝
  25   1              count = 0;
  26   1              TR0 = 0; //πÿ±’Timer0
  27   1              TH0 = 0x3c;
  28   1              TL0 = 0XB0; //—” ± 50 ms
  29   1              TR0 = 1;        //∆Ù∂ØTimer0
  30   1              count++;
  31   1              if (count == 20) //√˘Ω– 1 √Î
  32   1              {
  33   2                      bell = ~bell;
  34   2                      count = 0;
  35   2                      flag++;
  36   2              }
  37   1              if (flag == 6)
  38   1              {
  39   2                      flag = 0;
  40   2                      TR0 = 0; //πÿ±’Timer0
  41   2              }
  42   1      }
  43          /*****************************************************************************
  44           * √˚≥∆: Timer2_Servie() interrupt 5
  45           * π¶ƒ‹: ÷–∂œ∑˛ŒÒ≥Ã–Ú  ’˚µ„±® ± “ª∑÷÷”
  46           * »Îø⁄≤Œ ˝:
  47           * ≥ˆø⁄≤Œ ˝:
  48           *****************************************************************************/
  49          uchar HexNum_Convert(uchar HexNum) /* ±º‰¥Ê¥¢∏ˆŒª∫Õ ÆŒªµƒ∑Ω Ω”ÎŒ“√«”√µƒ ÆΩ¯÷∆≤ª“ª—˘£¨ƒ„∂Æµƒ£¨∫«∫«--BB≥µ*/
  50          {
  51   1              uchar Numtemp;
  52   1              Numtemp = (HexNum >> 4) * 10 + (HexNum & 0X0F);
  53   1              return Numtemp;
  54   1      }
  55          /******************************************************************************
C51 COMPILER V9.60.0.0   TEST                                                              06/25/2022 16:26:02 PAGE 2   

  56           * ∫Ø ˝√˚≥∆£∫main()
  57           * π¶    ƒ‹£∫
  58           * »Îø⁄≤Œ ˝£∫
  59           * ≥ˆø⁄≤Œ ˝£∫
  60           ********************************************************************************/
  61          void main(void)
  62          {
  63   1              uchar clock_time[6] = {0X00, 0X59, 0X23, 0X09, 0X04, 0X11}; //∂®“Â ±º‰±‰¡ø √Î  ∑÷  ± »’ ‘¬ ƒÍ
  64   1              uchar alarm_time[2] = {10, 06};                                                         //ƒ÷÷”…Ë÷√  alarm_time[0]: ∑÷÷”  alarm_time[1] :–° ±
  65   1              uchar temperature[2];                                                                           //∂®“ÂŒ¬∂»±‰¡ø   temperature[0]  µÕ8Œª   temperature[1]  ∏ﬂ8Œª
  66   1              Lcd_Initial();                                                                                          // LCD≥ı ºªØ
  67   1              Clock_Fresh(clock_time);                                                                        //Œ“∞— ±º‰À¢–¬∑≈‘⁄’‚¿Ô£¨proteusª·µ˜”√µ±«∞œµÕ≥ ±º‰£¨±Œ Œ™ ≤√¥£¨æ≠—È£¨∫«∫
             -«
  68   1              Clock_Initial(clock_time);                                                                      // ±÷”≥ı ‘ªØ
  69   1      
  70   1              /***********************÷–∂œ≥ı ºªØ***************************/
  71   1              EA = 1;          //ø™◊‹÷–∂œ
  72   1              ET0 = 1;         // Timer0 ø™÷–∂œ
  73   1              ET2 = 1;         // Timer2 ø™÷–∂œ
  74   1              TMOD = 0x01; // Timer0 π§◊˜∑Ω Ω 1
  75   1              RCAP2H = 0x3c;
  76   1              RCAP2L = 0xb0; // Timer2 —” ± 50 ms
  77   1      
  78   1              while (1)
  79   1              {
  80   2                      switch (Key_Scan())
  81   2                      {
  82   3                      case up_array:
  83   3                      {
  84   4                              Key_Idle();
  85   4                      }
  86   3                      break;
  87   3                      case down_array:
  88   3                      {
  89   4                              Key_Idle();
  90   4                      }
  91   3                      break;
  92   3                      case clear_array:
  93   3                      {
  94   4                              Key_Idle();
  95   4                      }
  96   3                      break;
  97   3                      case function_array:
  98   3                      {
  99   4                              Key_Function(clock_time, alarm_time);
 100   4                      }
 101   3                      case null:
 102   3                      {
 103   4                              Clock_Fresh(clock_time); // ±º‰À¢–¬
 104   4                              Lcd_Clock(clock_time);   // ±º‰œ‘ æ
 105   4      
 106   4                              Sensor_Fresh(temperature);       //Œ¬∂»∏¸–¬
 107   4                              Lcd_Temperture(temperature); //Œ¬∂»œ‘ æ
 108   4      
 109   4                              Calendar_Convert(0, clock_time);
 110   4                              Week_Convert(0, clock_time);
 111   4      
 112   4                              //’˚µ„±® ±
 113   4                              if ((*clock_time == 0x59) && (*(clock_time + 1) == 0x59))
 114   4                              {
 115   5                                      bell = 0;
 116   5                                      TR2 = 1; //∆Ù∂ØTimer2
C51 COMPILER V9.60.0.0   TEST                                                              06/25/2022 16:26:02 PAGE 3   

 117   5                              }
 118   4                              //ƒ÷÷”±®æØ
 119   4                              if (*alarm_time == HexNum_Convert(*(clock_time + 1)))                   //∑÷÷”œ‡Œ«∫œ
 120   4                                      if (*(alarm_time + 1) == HexNum_Convert(*(clock_time + 2))) //–° ±œ‡Œ«∫œ
 121   4                                      {
 122   5                                              bell = 0;
 123   5                                              TR2 = 1; //∆Ù∂ØTimer2
 124   5                                      }
 125   4                      }
 126   3                      break;
 127   3                      }
 128   2              }
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6193    ----
   CONSTANT SIZE    =   3848    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      96
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----      15
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
